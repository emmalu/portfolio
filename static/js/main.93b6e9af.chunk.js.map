{"version":3,"sources":["components/Header.js","components/ShowProjects.js","components/ShowWork.js","components/ShowExtras.js","components/ShowSkills.js","components/PortfolioData.js","components/TabbedContent.js","components/PortfolioInfo.js","App.js","serviceWorker.js","index.js","logo.svg","ep.JPG"],"names":["CustomAppBar","styled","AppBar","background","position","AppHeader","boxshadow","Toolbar","Grid","justify","alignItems","container","spacing","item","IconButton","edge","color","aria-label","href","target","tel","Typography","style","cursor","variant","onClick","window","scrollTo","Component","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","paper","gridList","transform","title","grey","action","titleBar","WorkCards","data","classes","className","GridList","cellHeight","cols","map","index","GridListTile","key","image","src","alt","project","GridListTileBar","desc","deployed","actionIcon","padding","textAlign","secondaryTail","secondary","main","CustomizedTimeline","Timeline","align","TimelineItem","TimelineOppositeContent","end","start","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","elevation","component","role","Link","open","link","org","margin","direction","maxWidth","xs","sm","Card","CardActionArea","CardHeader","name","subheader","reason","CardContent","Chip","chip","icon","type","label","clickable","flexGrow","heading","fontSize","typography","pxToRem","flexShrink","secondaryHeading","text","detailsItem","details","AccordionSkills","React","useState","expanded","setExpanded","handleChange","panel","event","isExpanded","awards","filter","certs","skills","langs","softies","Accordion","onChange","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","class","List","ListItem","Alert","severity","gutterBottom","AlertTitle","rel","GSheetReader","require","dataMap","sheet","sheetType","DataController","props","state","headers","isLoaded","this","parseData","thisItem","dataItem","options","sheetId","sheetNumber","returnAllResults","results","setState","content","CircularProgress","dataToRender","portfolioItem","renderLoader","TabPanel","children","value","other","hidden","aria-labelledby","Box","p","a11yProps","tabs","PortfolioTabs","setValue","Tabs","indicatorColor","newValue","centered","Tab","PortfolioData","DialogTitle","withStyles","closeButton","right","top","onClose","disableTypography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","setOpen","handleClose","Button","Dialog","dividers","autoFocus","white","paddingTop","scrollLink","App","Header","Container","cover","logo","scroller","duration","smooth","offset","alignContent","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.93b6e9af.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst CustomAppBar = styled(AppBar)({\n    background: 'linear-gradient(45deg, #87bdc7 30%, #CAC486 90%)',\n    position: 'fixed',\n});\n\nclass AppHeader extends Component {\n  render() {\n    return (\n        <div>\n            <CustomAppBar boxshadow={3}>\n                <Toolbar>\n                    <Grid\n                    justify=\"space-between\" // Add it here :)\n                    alignItems=\"center\"\n                    container \n                    spacing={24}\n                    >\n                        <Grid item>\n                            <IconButton edge=\"start\" color=\"#255D69\" aria-label=\"github\" href=\"https://github.com/emmalu\" target=\"_blank\">\n                                <GitHubIcon />\n                            </IconButton>\n                            <IconButton color=\"#255D69\" aria-label=\"linkedin\" href=\"https://linkedin.com/in/elpaz\" target=\"_blank\">\n                                <LinkedInIcon />\n                            </IconButton>\n                            <IconButton color=\"#255D69\" aria-label=\"phont/text\" tel=\"4045421123\" target=\"_blank\">\n                                <PhoneIphoneIcon />\n                            </IconButton>\n                            <IconButton color=\"#255D69\" aria-label=\"email\" href=\"mailto:mapmazelu@icloud.com?Subject=Portfolio\" target=\"_blank\">\n                                <AlternateEmailIcon />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <Typography style={{cursor: 'pointer'}} variant='h6' onClick={() => window.scrollTo(0, 0)}>\n                                MapMazeLu\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </CustomAppBar>\n        </div>\n    )\n  }\n};\n\nexport default AppHeader;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport LaunchIcon from '@material-ui/icons/Launch';\n//import Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)',\n    },\n    title: {\n      color: theme.palette.grey,\n    },\n    action: {\n      backgroundColor: '#fff',\n    },\n    titleBar: {\n        background: '#255D69'\n      //background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n}));\n\nexport default function WorkCards({data}) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList} cellHeight={400} cols={2.5}>\n            {\n                data.map((item,index) => (\n                    <GridListTile key={item.image}>\n                        <img src={item.image} alt={item.project} />\n                        <GridListTileBar\n                            title={item.desc + \" (\" + item.deployed + \")\"} \n                            classes={{\n                                root: classes.titleBar,\n                                title: classes.title,\n                            }}\n                            actionIcon={\n                                <IconButton className={classes.action} aria-label={`open ${item.project}`}>\n                                    <LaunchIcon className={classes.title} />\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))\n            }\n            </GridList>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport SchoolIcon from '@material-ui/icons/School';\nimport WorkIcon from '@material-ui/icons/Work';\n//import WorkOutlineIcon from '@material-ui/icons/WorkOutline';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: '6px 16px',\n    textAlign: 'center'\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nexport default function CustomizedTimeline({data}) {\n    const classes = useStyles();\n    return (\n        <Timeline align=\"alternate\">\n            {\n                data.map(item => (\n                    <TimelineItem>\n                        <TimelineOppositeContent>\n                        <Typography variant=\"body2\" color={(item.end)? \"textSecondary\" : \"textPrimary\"}>\n                            {(item.start)?(item.end)?item.start + \"- \" + item.end : \"Since \" + item.start : \"Class of \" + item.end}\n                        </Typography>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                        <TimelineDot>\n                            {(item.start)?(item.end)?<WorkIcon />: <WorkIcon color=\"primary\"/>:<SchoolIcon />}\n                        </TimelineDot>\n                        <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                        <Paper elevation={3} className={classes.paper}>\n                            <Typography variant=\"h6\" component=\"h1\">\n                                {item.role}\n                            </Typography>\n                            <Typography>\n                                <Link\n                                    component=\"button\"\n                                    variant=\"body2\"\n                                    onClick={() => {\n                                        window.open(item.link, \"_blank\");\n                                    }}\n                                    >\n                                    {item.org}\n                                </Link>\n                            </Typography>\n                        </Paper>\n                        </TimelineContent>\n                    </TimelineItem>\n                ))\n            }\n        </Timeline>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Chip from '@material-ui/core/Chip';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Grid from '@material-ui/core/Grid';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n          margin: theme.spacing(0.5),\n        },\n    },\n}));\n\nexport default function WorkCards({data}) {\n    const classes = useStyles();\n    return (\n        <Grid container direction=\"row\" spacing={2} maxWidth={90}>\n            {\n                data.map((item,index) => (     \n                    <Grid item xs={12} sm={3}>  \n                        <Card key={index}>\n                            <CardActionArea href={item.link} target=\"_blank\">                                   <CardHeader\n                                    title={item.name}\n                                    subheader={ item.reason}\n                                />           \n                                <CardContent>\n                                    <Chip\n                                        className={classes.chip}\n                                        icon = { (item.type === \"Read\")\n                                            ? <MenuBookIcon /> \n                                            : ( item.type === \"Play\")\n                                                ? <TouchAppIcon />\n                                                : ( item.type === \"Web\")\n                                                    ? <LanguageIcon />\n                                                    : <HeadsetIcon /> }\n                                        label = { (item.type === \"Read\" || item.type === \"Web\" )\n                                            ? \"Read / View\" \n                                            : ( item.type === \"Play\")\n                                                ? \"Explore / Play\"\n                                                : \"Listen / Watch\" }\n                                        clickable\n                                        component=\"a\"\n                                        href = { item.link }\n                                        target = \"_blank\"\n                                        backgroundColor=\"#CAC486\"\n                                    />\n                                </CardContent>\n                            </CardActionArea>\n                        </Card>\n                    </Grid>\n                ))\n            }\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport DesktopMacIcon from '@material-ui/icons/DesktopMac';\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FlareIcon from '@material-ui/icons/Flare';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //width: '100%',\n    flexGrow: 1,\n    alignItems: 'flext-start'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    //flexBasis: '50%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    display: 'block',\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n    //fontStyle: 'italic'\n  },\n  detailsItem: {\n      margin: '0 5px'\n  },\n  details: {\n      display: 'inline-flex',\n      padding: '5px 5px',\n  }\n}));\n\nexport default function AccordionSkills({data}) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const awards = data.filter(item => {\n        return item.type === \"award\";\n    });\n    const certs = data.filter(item => {\n        return item.type === \"certification\";\n    });\n    const skills = data.filter(item => {\n        return item.type === \"skill\";\n    });\n    const langs = data.filter(item => {\n        return item.type === \"language\";\n    });\n    const softies = data.filter(item => {\n        return item.type === \"soft\";\n    });\n\n    return (\n        <div container className={classes.root}>\n            <Accordion expanded={expanded === 'certsPanel'} onChange={handleChange('certsPanel')}>\n                <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"certsPanel-content\"\n                id=\"certsPanel-header\"\n                >\n                <Typography className={classes.heading}>Awards &amp; Certifications</Typography>\n                </AccordionSummary>\n                <AccordionDetails  class={classes.details}>\n                    <List>\n                        <ListItem>\n                            {\n                                certs.map( item => (\n                                    <Alert icon={false} severity=\"info\" gutterBottom>\n                                        <VerifiedUserIcon />\n                                        <AlertTitle>{item.start}</AlertTitle>\n                                        <strong>{item.org}</strong> - {item.name}\n                                    </Alert>\n                                ))\n                            }\n                        </ListItem>\n                        <ListItem>\n                            {\n                                awards.map( item => (\n                                    <Alert icon={false} severity=\"info\" gutterBottom>\n                                        <EmojiEventsIcon />\n                                        <AlertTitle>{item.start}</AlertTitle>\n                                        <a className={classes.secondaryHeading} href={item.link} target=\"_blank\" rel=\"noopener noreferrer\"><strong>{item.org}</strong></a> {item.name}\n                                    </Alert>\n                                ))\n                            }\n                        </ListItem>\n                    </List> \n                </AccordionDetails>\n            </Accordion>\n            <Accordion expanded={expanded === 'langsPanel'} onChange={handleChange('langsPanel')}>\n                <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"langsPanel-content\"\n                id=\"langsPanel-header\"\n                >\n                    <Typography className={classes.heading}>Languages, Software Skills &amp; Other Talents</Typography>\n                </AccordionSummary>\n                <AccordionDetails class={classes.details}>\n                    <List>\n                        <ListItem>\n                            {\n                                langs.map( item => (\n                                    <Alert icon={false} severity=\"info\" gutterBottom>\n                                        <LibraryBooksIcon />\n                                        <AlertTitle>{item.name}</AlertTitle>\n                                        {item.desc}\n                                    </Alert>\n                                ))\n                            }\n                        </ListItem>\n                        <ListItem>\n                            {\n                                skills.map( item => (\n                                    <Alert icon={false} severity=\"info\" gutterBottom>\n                                        <DesktopMacIcon />\n                                        <AlertTitle>{item.name}</AlertTitle>\n                                        {item.desc}\n                                    </Alert>\n                                ))\n                            }\n                        </ListItem>\n                        <ListItem>\n                            {\n                                softies.map( item => (\n                                    <Alert icon={false} severity=\"info\" gutterBottom>\n                                        <FlareIcon />\n                                        <AlertTitle>{item.name}</AlertTitle>\n                                    </Alert>\n                                ))\n                            }\n                        </ListItem>\n                    </List> \n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport Projects from './ShowProjects';\nimport Work from './ShowWork';\nimport Extras from './ShowExtras';\nimport Skills from './ShowSkills';\nimport Card from '@material-ui/core/Card';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nconst GSheetReader = require('g-sheets-api');\n\nconst dataMap = [{\n    sheet: 1,\n    sheetType: 'projects',\n},{\n    sheet: 2,\n    sheetType: 'work',\n},{\n    sheet: 6,\n    sheetType: 'extras',\n},{\n    sheet: 4,\n    sheetType: 'skills',\n}];\n\nclass DataController extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n            headers: [],\n            isLoaded: false,\n        };\n    }\n\n    componentDidMount() {\n        if(!this.state.isLoaded){\n            this.parseData(this.props.type);\n        }\n    }\n    \n    parseData(type) {\n        let thisItem = dataMap.filter(function(dataItem){\n            return dataItem.sheetType === type;\n        });\n        const options = {\n            sheetId: '1IKTZx9tPOYuiqXn_LvucuFRbJqAr3umBMn5VEfLeoFc',\n            sheetNumber: thisItem[0].sheet,\n            returnAllResults: true\n        }\n        GSheetReader(options, results => {\n            let headers = thisItem[0].headers;\n            this.setState({\n                data: results,\n                headers: headers\n            });\n            this.setState({ isLoaded: true });\n        });\n    }\n\n    renderLoader(content){\n        return (\n            content = <CircularProgress color=\"primary\"/>\n        );\n    }\n    renderSkills(content){\n        let dataToRender = this.state.data;\n        return (\n            content = <Paper>\n                {\n                    dataToRender.map((item,index) => (\n                        <Card key={index}>{item.role} {item.org}<br />{item.deployed}</Card>\n                    ))\n                }\n            </Paper>\n        );\n    }\n\n    render() {\n        const portfolioItem = this.props;\n        const isLoaded = this.state.isLoaded;\n        let content = this.renderLoader();\n        if (isLoaded) {\n            switch(portfolioItem.type){\n                case \"projects\":\n                    //content = this.renderProjects()\n                    content = <Projects data={this.state.data}/>\n                    break;\n                case \"work\":\n                    content = <Work data={this.state.data}/>\n                    break;\n                case \"extras\":\n                    content = <Extras data={this.state.data}/>\n                    break;\n                case \"skills\":\n                    content = <Skills data={this.state.data}/>\n                    break;\n                default:\n                    break;\n            }\n        }\n        return (\n            <Grid>\n                {content}\n            </Grid>\n        );\n    }\n}\n\nexport default DataController;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n//import { WebMapView } from './MapHistory';\n//import MapHistory from './MapboxHistory';\nimport PortfolioData from './PortfolioData';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  /* root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: 550,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  }, */\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabs:{\n    backgroundColor: \"#ebebeb\",\n  }\n}));\n\nexport default function PortfolioTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        variant=\"fullWidth\"\n        value={value}\n        indicatorColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"Portfolio tabs\"\n        centered\n      >\n        <Tab label=\"Portfolio\" {...a11yProps(0)} />\n        <Tab label=\"Experience\" {...a11yProps(1)} />\n        {/* <Tab label=\"Education\" {...a11yProps(2)} />\n        <Tab label=\"Extra Bytes\" {...a11yProps(3)} /> */}\n        <Tab label=\"Noteworthy Bytes\" {...a11yProps(2)} />\n      </Tabs>\n      <TabPanel className={classes.tabs} value={value} index={0}>\n        <Typography variant=\"p\" alignItems=\"center\">\n          I love what I do! The beautiful maps, powerful data visualizations, technical programming, cool drone footage and creative graphics design.\n        </Typography>\n        <PortfolioData type={'projects'}/>\n      </TabPanel>\n      <TabPanel className={classes.tabs} value={value} index={1}>\n        <PortfolioData type={'skills'}/>\n        <br />\n        <PortfolioData type={'work'}/>\n      </TabPanel>\n      <TabPanel className={classes.tabs} value={value} index={2}>\n        <Typography variant=\"p\" alignItems=\"center\">\n          In case you're interested: here is <em>some</em> of my most favorite, inspiring content on the web.\n        </Typography>\n        <PortfolioData type={'extras'}/>\n      </TabPanel>\n      {/* <TabPanel className={classes.tabs} value={value} index={3}>\n        <PortfolioData type={'skills'}/>\n      </TabPanel>\n      {<TabPanel className={classes.tabs} value={value} index={2}>\n        <MapHistory />\n      </TabPanel>} */}\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    //color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        <InfoIcon />\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          What's in here?\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            The <strong>map-centric applications</strong> in this portfolio showcase some of my work—projects in which I've taken the Lead Developer role (writing &gt;&#61; 90% code).\n          </Typography>\n          <Typography gutterBottom>\n            While <strong>each project applies its own layout, content &amp; and features</strong>, most applications are:\n            <ul>\n                <li>mobile-ready &amp; device agnostic</li>\n                <li>built using tools like Esri's REST/JavaScript APIs</li>\n                <li>written with responsive libraries (i.e. Materialize &amp; Bootstrap)</li>\n                <li>supported by server-side PHP &amp; Python scripting to process data in <strong>MS SQL &amp; MySQL</strong> databases, as well as <strong>REST &amp; SOAP web services</strong></li>\n            </ul>\n          </Typography>\n          {/* <Typography gutterBottom>\n            Of course, good looks aren't everything. <em>(am I right?)</em> The applications you see are powered by efficient server-side <strong>PHP &amp; Python</strong>/client-side <strong>JavaScript</strong> to process data in <strong>MS SQL &amp; MySQL</strong> databases, as well as <strong>REST &amp; SOAP web services</strong>.\n          </Typography> */}\n          <hr/>\n          <Typography gutterBottom>\n            Lastly, in efforts to pursue new skills and learn new tooling, this portfolio is written using the <strong>React</strong> framework. Enjoy!\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { Link, scroller } from \"react-scroll\";\nimport logo from './logo.svg';\nimport cover from './ep.JPG';\nimport './App.css';\nimport Header from './components/Header';\nimport TabbedContent from './components/TabbedContent';\nimport PortfolioInfo from './components/PortfolioInfo';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper:{\n    padding: theme.spacing(4),\n    backgroundColor: '#87bdc7', //blue\n    maxWidth: '70%',\n    //square: true\n  },\n  white: {\n    backgroundColor: 'white',\n    paddingTop: 'inherit',\n    /* paddingLeft: 0,\n    paddingRight: 0, */\n  },\n  scrollLink: {\n    color: '#fff',\n    cursor: 'pointer'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  \n  function handleScroll() {\n    //animateScroll.scrollTo(500);\n    scroller.scrollTo(\"scrollDiv\", {\n      duration: 500,\n      smooth: \"easeInExpo\",\n      offset: -80\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"App-content\">\n        <Grid container alignItems=\"center\">\n          <Grid container item xs={12} sm={6}>\n            <Container className={classes.white}>\n              {<img src={cover} className=\"App-cover\" alt=\"ep-cover\" />}\n            </Container>\n          </Grid>\n          <Grid container item xs={12} sm={6}\n            justify=\"space-evenly\"\n            className=\"App-contours\">\n              <Paper className={classes.paper}>\n                <Typography variant=\"h3\" gutterBottom>\n                  MapMazeLu\n                </Typography>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  <code>GIS Professional • Full-Stack Developer • Map Enthusiast</code>\n                </Typography>\n                {<img src={logo} className=\"App-logo\" alt=\"logo\" />}\n                <Typography variant=\"body1\" gutterBottom>\n                  B I E N V E N I D O S<br />\n                  &amp; thanks for visiting! <br />\n                  <PortfolioInfo />\n                  <Link\n                    className={classes.scrollLink}\n                    onClick={handleScroll}>\n                      Please, have a look around...\n                  </Link>\n                </Typography>\n              </Paper>\n            </Grid>\n        </Grid>\n      </div>\n      <hr></hr>\n      <Grid container item xs={12} alignContent=\"center\" id=\"scrollDiv\">\n        <TabbedContent />\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.6e251a6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/ep.6016a94f.JPG\";"],"sourceRoot":""}