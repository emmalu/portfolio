{"version":3,"sources":["logo.svg","ep.JPG","components/Header.js","components/DataProjects.js","components/DataWork.js","components/TabbedContent.js","components/PortfolioInfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CustomAppBar","styled","AppBar","background","position","AppHeader","boxshadow","Toolbar","IconButton","edge","color","aria-label","href","target","tel","Component","GSheetReader","require","dataMap","sheet","sheetType","headers","DataController","props","state","projects","work","school","skills","isLoaded","this","parseData","type","thisItem","filter","dataItem","options","sheetId","sheetNumber","returnAllResults","results","filteredResults","forEach","result","Object","keys","key","includes","push","console","log","setState","itemType","select","dataToRender","Card","map","item","index","project","desc","portfolioItem","renderPortfolioContent","k","role","org","TabPanel","children","value","other","hidden","id","aria-labelledby","Box","p","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","paper","display","height","tabs","borderRight","divider","VerticalTabs","classes","React","useState","setValue","className","Tabs","orientation","variant","indicatorColor","onChange","event","newValue","centered","Tab","label","DialogTitle","withStyles","margin","padding","spacing","closeButton","right","top","onClose","disableTypography","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","open","setOpen","handleClose","Button","Dialog","dividers","gutterBottom","autoFocus","white","App","Header","Grid","container","xs","sm","Container","src","cover","alt","justify","alignItems","Paper","logo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6e6f3553.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6e251a6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/ep.6016a94f.JPG\";","import React, {Component} from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\n\n\nconst CustomAppBar = styled(AppBar)({\n    background: 'linear-gradient(45deg, #87bdc7 30%, #CAC486 90%)',\n    position: 'fixed',\n});\n\nclass AppHeader extends Component {\n  render() {\n    return (\n        <div>\n            <CustomAppBar boxshadow={3}>\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"#255D69\" aria-label=\"github\" href=\"https://github.com/emmalu\" target=\"_blank\">\n                        <GitHubIcon />\n                    </IconButton>\n                    <IconButton color=\"#255D69\" aria-label=\"linkedin\" href=\"https://linkedin.com/in/elpaz\" target=\"_blank\">\n                        <LinkedInIcon />\n                    </IconButton>\n                    <IconButton color=\"#255D69\" aria-label=\"phont/text\" tel=\"4045421123\" target=\"_blank\">\n                        <PhoneIphoneIcon />\n                    </IconButton>\n                    <IconButton color=\"#255D69\" aria-label=\"email\" href=\"mailto:emma.lu.paz@gmail.com?Subject=Portfolio\" target=\"_blank\">\n                        <AlternateEmailIcon />\n                    </IconButton>\n                </Toolbar>\n            </CustomAppBar>\n            {/* <header className=\"App-header\">\n                <HeaderBox fixed boxshadow={3}>\n                    <ButtonGroup variant=\"text\" aria-label=\"text info.main button group\">\n                        <Button size=\"large\" href=\"https://github.com/emmalu\" target=\"_blank\">\n                            <GitHubIcon />\n                        </Button>\n                        <Button size=\"large\" href=\"https://linkedin.com/in/elpaz\" target=\"_blank\">\n                            <LinkedInIcon />\n                        </Button>\n                        <Button size=\"large\" href=\"tel:4045421123\">\n                            <PhoneIphoneIcon />\n                        </Button>\n                        <Button size=\"large\" href=\"mailto:emma.lu.paz@gmail.com?Subject=Portfolio\" target=\"_blank\">\n                            <AlternateEmailIcon />\n                        </Button>\n                    </ButtonGroup>\n                </HeaderBox>\n            </header> */}\n        </div>\n    )\n  }\n};\n\nexport default AppHeader;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nconst GSheetReader = require('g-sheets-api');\n\nconst dataMap = [{\n    sheet: 1,\n    sheetType: 'projects',\n    headers: ['project', 'deployed', 'image', 'link']\n},{\n    sheet: 2,\n    sheetType: 'work',\n    headers: ['role', 'org', 'start', 'end', 'link']\n},{\n    sheet: 3,\n    sheetType: 'school',\n    headers: ['degree', 'year', 'logo', 'link', 'project', 'advisor']\n},{\n    sheet: 4,\n    sheetType: 'skills',\n    headers: ['name', 'desc', 'org', 'start', 'end', 'type']\n}];\nclass DataController extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects: [],\n            work: [],\n            school: [],\n            skills: [],\n            isLoaded: false,\n        };\n    }\n\n    componentDidMount() {\n        if(!this.state.isLoaded){\n            this.parseData(this.props.type);\n        }\n    }\n    \n    parseData(type) {\n        let thisItem = dataMap.filter(function(dataItem){\n            return dataItem.sheetType === type;\n        });\n        const options = {\n            sheetId: '1IKTZx9tPOYuiqXn_LvucuFRbJqAr3umBMn5VEfLeoFc',\n            sheetNumber: thisItem[0].sheet,\n            returnAllResults: true\n        }\n        GSheetReader(options, results => {\n            debugger;\n            let headers = thisItem[0].headers;\n            let filteredResults = [];\n            results.forEach(function(result) {\n                Object.keys(result)\n                .forEach(function(key) {\n                    if(headers.includes(key)){\n                        filteredResults.push(result[key]);\n                        console.log(key + ': ' + result[key]);\n                    }\n                });\n            });\n            console.log(filteredResults);\n            switch(thisItem[0].sheet){\n                case 1:\n                    this.setState({\n                        projects: results,\n                    });\n                    break;\n                case 2:\n                    this.setState({\n                        work: results,\n                    });\n                    break;\n                case 3:\n                    this.setState({\n                        school: results,\n                    });\n                    break;\n                case 4:\n                    this.setState({\n                        skills: results,\n                    });\n                    break;\n                default: \n                    console.log(results);\n                break;\n            }\n            this.setState({ isLoaded: true });\n        });\n    }\n\n    renderPortfolioContent(itemType){\n        if(this.state.isLoaded){\n            let select = itemType.type;\n            let dataToRender = this.state[select];\n            /* let schema = dataMap.filter(function(dataItem){\n                return dataItem.sheetType === select;\n            }); */\n            //let headers = schema[0].headers;\n            return (\n                <Card>\n                    {dataToRender.map((item,index) => (\n                        <Card key={index}>{item.project}<br />{item.desc}</Card>\n                    ))}\n                </Card>\n            );\n        }\n    }\n\n    render() {\n        const portfolioItem = this.props;\n        return (\n            <div>\n                {this.renderPortfolioContent(portfolioItem)}\n            </div>\n        );\n    }\n}\n\nexport default DataController;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nconst GSheetReader = require('g-sheets-api');\n\nconst dataMap = [{\n    sheet: 1,\n    sheetType: 'projects',\n    headers: ['project', 'deployed', 'image', 'link']\n},{\n    sheet: 2,\n    sheetType: 'work',\n    headers: ['role', 'org', 'start', 'end', 'link']\n},{\n    sheet: 3,\n    sheetType: 'school',\n    headers: ['degree', 'year', 'logo', 'link', 'project', 'advisor']\n},{\n    sheet: 4,\n    sheetType: 'skills',\n    headers: ['name', 'desc', 'org', 'start', 'end', 'type']\n}];\nclass DataController extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects: [],\n            work: [],\n            school: [],\n            skills: [],\n            isLoaded: false,\n        };\n    }\n\n    componentDidMount() {\n        if(!this.state.isLoaded){\n            this.parseData(this.props.type);\n        }\n    }\n    \n    parseData(type) {\n        let thisItem = dataMap.filter(function(dataItem){\n            return dataItem.sheetType === type;\n        });\n        const options = {\n            sheetId: '1IKTZx9tPOYuiqXn_LvucuFRbJqAr3umBMn5VEfLeoFc',\n            sheetNumber: thisItem[0].sheet,\n            returnAllResults: true\n        }\n        GSheetReader(options, results => {\n            switch(thisItem[0].sheet){\n                case 1:\n                    this.setState({\n                        projects: results,\n                    });\n                    break;\n                case 2:\n                    this.setState({\n                        work: results,\n                    });\n                    break;\n                case 3:\n                    this.setState({\n                        school: results,\n                    });\n                    break;\n                case 4:\n                    this.setState({\n                        skills: results,\n                    });\n                    break;\n                default: \n                    console.log(results);\n                break;\n            }\n            this.setState({ isLoaded: true });\n        });\n    }\n\n    renderPortfolioContent(itemType){\n        if(this.state.isLoaded){\n            let select = itemType.type;\n            let dataToRender = this.state[select];\n            let schema = dataMap.filter(function(dataItem){\n                return dataItem.sheetType === select;\n            });\n            let headers = schema[0].headers;\n            let k = headers[0];\n            console.log(headers, k);\n            return (\n                <Card>\n                    {dataToRender.map((item,index) => (\n                        <Card key={item.role}>{item.role}<br />{item.org}</Card>\n                    ))}\n                </Card>\n            );\n        }\n    }\n\n    render() {\n        const portfolioItem = this.props;\n        return (\n            <div>\n                {this.renderPortfolioContent(portfolioItem)}\n            </div>\n        );\n    }\n}\n\nexport default DataController;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProjectsData from './DataProjects';\nimport WorkData from './DataWork';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: 550,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nexport default function VerticalTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        indicatorColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n        centered\n      >\n        <Tab label=\"Projects\" {...a11yProps(0)} />\n        <Tab label=\"Experience\" {...a11yProps(1)} />\n        <Tab label=\"Education\" {...a11yProps(2)} />\n        <Tab label=\"Skills\" {...a11yProps(3)} />\n        <Tab label=\"Map History\" {...a11yProps(4)} />\n        <Tab label=\"For Fun\" {...a11yProps(5)} />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <ProjectsData type={'projects'}/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <WorkData type={'work'}/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <ProjectsData type={'school'}/>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <ProjectsData type={'skills'}/>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Map History\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        For Fun\n      </TabPanel>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    //color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        <InfoIcon />\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Portfolio Details\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            This portfolio of <strong>map-centric applications </strong>showcases some of my best <strong>public-facing work</strong>—projects in which I've taken the Lead Developer role (writing &gt;&#61; 90% code).\n          </Typography>\n          <Typography gutterBottom>\n            While <strong>each project showcases a variety of different layouts and features</strong>, most applications are:\n            <ul>\n                <li>mobile-ready / device agnostic</li>\n                <li>built using Esri's REST and JavaScript APIs</li>\n                <li>written using responsive libraries like MaterializeCSS &amp; Bootstrap</li>\n            </ul>\n          </Typography>\n          <Typography gutterBottom>\n            Of course, <em>good looks aren't everything</em>. My UIs are complemented by <strong>efficient server-side and client-side code</strong>, using back-end tools like <strong>PHP and Python</strong>, to query data views in <strong>MySQL and MS SQL</strong> databases.\n          </Typography>\n          <Typography>\n              Enjoy!\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport cover from './ep.JPG';\nimport './App.css';\nimport Header from './components/Header';\nimport TabbedContent from './components/TabbedContent';\nimport PortfolioInfo from './components/PortfolioInfo';\nimport { makeStyles } from '@material-ui/core/styles';\n//import Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper:{\n    padding: theme.spacing(4),\n    backgroundColor: '#87bdc7', //blue\n    //square: true\n  },\n  white: {\n    backgroundColor: 'white',\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"App-content\">\n        <Grid container>\n          <Grid item xs={12} sm={6}>\n            <Container className={classes.white}>\n              {<img src={cover} className=\"App-cover\" alt=\"ep-cover\" />}\n            </Container>\n          </Grid>\n          <Grid container\n            xs={12} sm={6}\n            justify=\"space-evenly\"\n            alignItems=\"center\"\n            className=\"App-contours\">\n              <Paper className={classes.paper}>\n                <Typography variant=\"h3\" gutterBottom>\n                  MapMazeLu\n                </Typography>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  <code>GIS Professional • Developer • Enthusiast</code>\n                </Typography>\n                {<img src={logo} className=\"App-logo\" alt=\"logo\" />}\n                <Typography variant=\"body1\" gutterBottom>\n                  B I E N V E N I D O S<br />\n                  Thanks for visiting my online portfolio.<br />\n                  <Button className=\"App-link\" href=\"#\">Please, have a look around...</Button>\n                  <PortfolioInfo/>\n                </Typography>\n              </Paper>\n            </Grid>\n        </Grid>\n      </div>\n      <hr></hr>\n      <Grid container xs={12}>\n        <TabbedContent/>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}