{"version":3,"sources":["components/Header.js","components/ShowProjects.js","components/ShowWork.js","components/ShowExtras.js","components/ShowSkills.js","components/PortfolioData.js","components/TabbedContent.js","components/PortfolioInfo.js","App.js","serviceWorker.js","index.js","logo.svg","ep.JPG"],"names":["CustomAppBar","styled","AppBar","background","position","AppHeader","boxshadow","Toolbar","Grid","justify","alignItems","container","spacing","item","IconButton","edge","aria-label","href","target","tel","className","onClick","window","scrollTo","Component","WorkCards","data","map","index","key","src","image","alt","project","desc","deployed","link","rel","useStyles","makeStyles","theme","paper","padding","contentAlign","textAlign","secondaryTail","backgroundColor","palette","secondary","main","CustomizedTimeline","classes","Timeline","align","TimelineItem","TimelineOppositeContent","end","start","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","elevation","role","org","name","reason","type","AccordionSkills","React","useState","expanded","setExpanded","handleChange","panel","event","isExpanded","awards","filter","certs","skills","langs","softies","Accordion","onChange","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","GSheetReader","require","dataMap","sheet","sheetType","DataController","props","state","headers","isLoaded","this","parseData","thisItem","dataItem","options","sheetId","sheetNumber","returnAllResults","results","setState","content","CircularProgress","dataToRender","Card","portfolioItem","renderLoader","TabPanel","children","value","other","hidden","aria-labelledby","Box","p","a11yProps","root","flexGrow","tabs","PortfolioTabs","setValue","Tabs","variant","indicatorColor","newValue","TabIndicatorProps","style","height","top","centered","Tab","color","label","PortfolioData","DialogTitle","withStyles","margin","onClose","disableTypography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","open","setOpen","handleClose","Dialog","dividers","App","Header","cover","logo","scroller","duration","smooth","offset","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.1246cc90.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\n\n\nconst CustomAppBar = styled(AppBar)({\n    background: 'linear-gradient(45deg, #87bdc7 30%, #CAC486 90%)',\n    position: 'fixed',\n});\n\nclass AppHeader extends Component {\n  render() {\n    return (\n        <div>\n            <CustomAppBar boxshadow={3}>\n                <Toolbar>\n                    <Grid\n                    justify=\"space-between\" // Add it here :)\n                    alignItems=\"center\"\n                    container \n                    spacing={1}\n                    >\n                        <Grid item>\n                            <IconButton edge=\"start\" aria-label=\"github\" href=\"https://github.com/emmalu\" target=\"_blank\">\n                                <GitHubIcon />\n                            </IconButton>\n                            <IconButton  aria-label=\"linkedin\" href=\"https://linkedin.com/in/elpaz\" target=\"_blank\">\n                                <LinkedInIcon />\n                            </IconButton>\n                            <IconButton  aria-label=\"phont/text\" tel=\"4045421123\" target=\"_blank\">\n                                <PhoneIphoneIcon />\n                            </IconButton>\n                            <IconButton  aria-label=\"email\" href=\"mailto:mapmazelu@icloud.com?Subject=Portfolio\" target=\"_blank\">\n                                <AlternateEmailIcon />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <h1 className=\"cursor-pointer text-2xl\" onClick={() => window.scrollTo(0, 0)}>\n                                MapMazeLu\n                            </h1>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </CustomAppBar>\n        </div>\n    )\n  }\n};\n\nexport default AppHeader;","import React from 'react';\nimport \"fontsource-montserrat\"; \nimport LaunchIcon from '@material-ui/icons/Launch';\n\nexport default function WorkCards({data}) {\n    return (\n        <div className='grid md:grid-cols-3 md:gap-4 place-items-center'>\n            {\n                data.map((item,index) => (\n                    <div className=\"flip-box px-2 py-2 shadow-lg mb-4\" key={index}>\n                        <div className=\"flip-box-inner\">\n                            <div className=\"flip-box-front\">\n                                <img src={item.image} alt={item.project + \" cover\"}/>\n                            </div>\n                            <div className=\"align-middle flip-box-back bg-ep-blue-dark\">\n                                <div>\n                                    <h2 className=\"font-semibold\">{item.desc + \". . .\"}</h2>\n                                    <h6 className=\"text-sm py-3\">{\"Released in \" + item.deployed}</h6>\n                                    <button className=\"bg-ep-yellow hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded-full inline-flex items-center\">\n                                        <a  aria-label={`open ${item.project}`} href={item.link} target=\"_blank\" rel=\"noopener noreferrer\"><LaunchIcon /> Open</a>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ))\n            }\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n//import Link from '@material-ui/core/Link';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport SchoolIcon from '@material-ui/icons/School';\nimport WorkIcon from '@material-ui/icons/Work';\n//import WorkOutlineIcon from '@material-ui/icons/WorkOutline';\nimport Paper from '@material-ui/core/Paper';\n//import Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: '6px 16px',\n    contentAlign: 'middle',\n    textAlign: 'center'\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nexport default function CustomizedTimeline({data}) {\n    const classes = useStyles();\n    return (\n        <Timeline align=\"alternate\">\n            {\n                data.map((item, index) => (\n                    <TimelineItem key={index}>\n                        <TimelineOppositeContent>\n                            <div className={(item.end)? \"text-ep-blue-dark text-opacity-75 pt-2\" : \"text-ep-blue-dark pt-2\"}>\n                                {(item.start)?(item.end)?item.start + \"- \" + item.end : \"Since \" + item.start : \"Class of \" + item.end}\n                            </div>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                        <TimelineDot>\n                            {(item.start)?(item.end)?<WorkIcon />: <WorkIcon className=\"text-ep-blue-dark\"/>:<SchoolIcon />}\n                        </TimelineDot>\n                        <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                        <Paper elevation={3} className={classes.paper}>\n                            <h6 className=\"text-lg font-extrabold\">{item.role}</h6>\n                            <a className=\"text-sm italic text-ep-blue-dark\" href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {item.org}\n                            </a>\n                        </Paper>\n                        </TimelineContent>\n                    </TimelineItem>\n                ))\n            }\n        </Timeline>\n    );\n}\n","import React from 'react';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\n\n\nexport default function WorkCards({data}) {\n    return (\n        <div className=\"grid\">\n            <div className=\"grid-flow-row-dense\">\n            {\n                data.map((item,index) => ( \n                    <div className=\"rounded overflow-hidden shadow-lg\" key={index}>\n                        <div className=\"px-4 py-3\"> \n                            <span className=\"font-bold text-xl mb-2\">{item.name}: </span>\n                            <span className=\"text-gray-700 text-base\">{item.reason} </span>\n                            <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"inline-block bg-ep-yellow hover:bg-gray-300 rounded-lg px-3 py-1 text-sm font-semibold text-gray-700 mx-2 my-2\">\n                                    { (item.type === \"Read\")\n                                        ? <MenuBookIcon /> \n                                        : ( item.type === \"Play\")\n                                            ? <TouchAppIcon />\n                                            : ( item.type === \"Web\")\n                                                ? <LanguageIcon />\n                                                : <HeadsetIcon />\n                                    }\n                                    { (item.type === \"Read\" || item.type === \"Web\" )\n                                        ? \"Read / View\" \n                                        : ( item.type === \"Play\")\n                                            ? \"Explore / Play\"\n                                            : \"Listen / Watch\"\n                                    }    \n                                </a>\n                        </div>\n                    </div>\n                ))\n            }\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport DesktopMacIcon from '@material-ui/icons/DesktopMac';\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FlareIcon from '@material-ui/icons/Flare';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\n\n\nexport default function AccordionSkills({data}) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const awards = data.filter(item => {\n        return item.type === \"award\";\n    });\n    const certs = data.filter(item => {\n        return item.type === \"certification\";\n    });\n    const skills = data.filter(item => {\n        return item.type === \"skill\";\n    });\n    const langs = data.filter(item => {\n        return item.type === \"language\";\n    });\n    const softies = data.filter(item => {\n        return item.type === \"soft\";\n    });\n\n    return (\n        <div>\n            <Accordion expanded={expanded === 'certsPanel'} onChange={handleChange('certsPanel')}>\n                <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"certsPanel-content\"\n                id=\"certsPanel-header\"\n                >\n                    <h6>Awards &amp; Certifications</h6>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <div>\n                        <div className=\"grid grid-cols-1 sm:grid-flow-col sm:auto-cols-fr\">\n                            {\n                                certs.map( item => (\n                                    <div className=\"max-w-sm rounded overflow-hidden shadow-lg text-center bg-gray-200 sm:text-left\">\n                                        <div className=\"px-4 py-3\">\n                                            <VerifiedUserIcon />\n                                            <div className=\"font-bold text-xl mb-2\">{item.start}</div>\n                                            <p className=\"text-gray-700 text-base\">\n                                                {item.name}\n                                            </p>\n                                        </div>\n                                        <div className=\"px-6 pt-1 pb-2\">\n                                            <span className=\"inline-block bg-ep-yellow rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">{item.org}</span>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                        <div className=\"grid grid-cols-1 sm:grid-flow-col sm:auto-cols-fr\">\n                            {\n                                awards.map( item => (\n                                    <div className=\"max-w-sm rounded overflow-hidden shadow-lg text-center sm:text-left\">\n                                        <div className=\"px-4 py-3\">\n                                            <EmojiEventsIcon />\n                                            <div className=\"font-bold text-xl mb-2\">{item.start}</div>\n                                            <p className=\"text-gray-700 text-base\">\n                                                {item.name}\n                                            </p>\n                                        </div>\n                                        <div className=\"px-6 pt-1 pb-2\">\n                                            <span className=\"inline-block bg-ep-yellow rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">{item.org}</span>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                </AccordionDetails>\n            </Accordion>\n            <Accordion expanded={expanded === 'langsPanel'} onChange={handleChange('langsPanel')}>\n                <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"langsPanel-content\"\n                id=\"langsPanel-header\"\n                >\n                    <h6>Languages, Software &amp; Other Talents</h6>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <div>\n                        <div className=\"grid grid-cols-1 sm:grid-flow-col sm:auto-cols-fr\">\n                            {\n                                langs.map( item => (\n                                    <div className=\"max-w-sm rounded overflow-hidden shadow-lg text-center sm:text-left\">\n                                        <div className=\"px-4 py-3\">\n                                            <LibraryBooksIcon />\n                                            <div className=\"font-bold text-sm mb-2\">{item.name}</div>\n                                            <p className=\"text-gray-700 text-sm\">\n                                                {item.desc}\n                                            </p>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                        <div className=\"grid grid-cols-1 sm:grid-flow-col sm:auto-cols-fr\">\n                            {\n                                skills.map( item => (\n                                    <div className=\"max-w-sm rounded overflow-hidden shadow-lg text-center sm:text-left\">\n                                        <div className=\"px-4 py-3\">\n                                            <DesktopMacIcon />\n                                            <div className=\"font-bold text-sm mb-2\">{item.name}</div>\n                                            <p className=\"text-gray-700 text-sm\">\n                                                {item.desc}\n                                            </p>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                        <div className=\"grid grid-cols-1 sm:grid-flow-col sm:auto-cols-fr\">\n                            {\n                                softies.map( item => (\n                                    <div className=\"max-w-sm rounded overflow-hidden shadow-lg text-center sm:text-left\">\n                                        <div className=\"px-4 py-3\">\n                                            <FlareIcon />\n                                            <div className=\"font-bold text-sm mb-2\">{item.name}</div>\n                                            <p className=\"text-gray-700 text-base\">\n                                                {item.desc}\n                                            </p>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                        {/* <ListItem>\n                            {\n                                langs.map( item => (\n                                    <Alert icon={false} severity=\"info\" gutterBottom>\n                                        <LibraryBooksIcon />\n                                        <AlertTitle>{item.name}</AlertTitle>\n                                        {item.desc}\n                                    </Alert>\n                                ))\n                            }\n                        </ListItem>\n                        <ListItem>\n                            {\n                                skills.map( item => (\n                                    <Alert icon={false} severity=\"info\" gutterBottom>\n                                        <DesktopMacIcon />\n                                        <AlertTitle>{item.name}</AlertTitle>\n                                        {item.desc}\n                                    </Alert>\n                                ))\n                            }\n                        </ListItem>\n                        <ListItem>\n                            {\n                                softies.map( item => (\n                                    <Alert icon={false} severity=\"info\" gutterBottom>\n                                        <FlareIcon />\n                                        <AlertTitle>{item.name}</AlertTitle>\n                                    </Alert>\n                                ))\n                            }\n                        </ListItem> */}\n                    </div> \n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport Projects from './ShowProjects';\nimport Work from './ShowWork';\nimport Extras from './ShowExtras';\nimport Skills from './ShowSkills';\nimport Card from '@material-ui/core/Card';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nconst GSheetReader = require('g-sheets-api');\n\nconst dataMap = [{\n    sheet: 1,\n    sheetType: 'projects',\n},{\n    sheet: 2,\n    sheetType: 'work',\n},{\n    sheet: 6,\n    sheetType: 'extras',\n},{\n    sheet: 4,\n    sheetType: 'skills',\n}];\n\nclass DataController extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n            headers: [],\n            isLoaded: false,\n        };\n    }\n\n    componentDidMount() {\n        if(!this.state.isLoaded){\n            this.parseData(this.props.type);\n        }\n    }\n    \n    parseData(type) {\n        let thisItem = dataMap.filter(function(dataItem){\n            return dataItem.sheetType === type;\n        });\n        const options = {\n            sheetId: '1IKTZx9tPOYuiqXn_LvucuFRbJqAr3umBMn5VEfLeoFc',\n            sheetNumber: thisItem[0].sheet,\n            returnAllResults: true\n        }\n        GSheetReader(options, results => {\n            let headers = thisItem[0].headers;\n            this.setState({\n                data: results,\n                headers: headers\n            });\n            this.setState({ isLoaded: true });\n        });\n    }\n\n    renderLoader(content){\n        return (\n            content = <div className=\"items-center\"><CircularProgress /></div>\n        );\n    }\n    renderSkills(content){\n        let dataToRender = this.state.data;\n        return (\n            content = <Paper>\n                {\n                    dataToRender.map((item,index) => (\n                        <Card key={index}>{item.role} {item.org}<br />{item.deployed}</Card>\n                    ))\n                }\n            </Paper>\n        );\n    }\n\n    render() {\n        const portfolioItem = this.props;\n        const isLoaded = this.state.isLoaded;\n        let content = this.renderLoader();\n        if (isLoaded) {\n            switch(portfolioItem.type){\n                case \"projects\":\n                    //content = this.renderProjects()\n                    content = <Projects data={this.state.data}/>\n                    break;\n                case \"work\":\n                    content = <Work data={this.state.data}/>\n                    break;\n                case \"extras\":\n                    content = <Extras data={this.state.data}/>\n                    break;\n                case \"skills\":\n                    content = <Skills data={this.state.data}/>\n                    break;\n                default:\n                    break;\n            }\n        }\n        return (\n            <Grid>\n                {content}\n            </Grid>\n        );\n    }\n}\n\nexport default DataController;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'fontsource-montserrat';\nimport PortfolioData from './PortfolioData';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <div>{children}</div>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabs:{\n    backgroundColor: \"#ebebeb\",\n  }\n}));\n\nexport default function PortfolioTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div>\n      <Tabs\n        variant=\"fullWidth\"\n        value={value}\n        indicatorColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"Portfolio tabs\"\n        TabIndicatorProps={{\n          style: { background: \"#CAC486\", height: \"10px\", top: \"35px\" }\n        }}\n        centered\n      >\n        <Tab color=\"#000\" label=\"Portfolio\" {...a11yProps(0)} />\n        <Tab label=\"Experience\" {...a11yProps(1)} />\n        {/* <Tab label=\"Education\" {...a11yProps(2)} />\n        <Tab label=\"Extra Bytes\" {...a11yProps(3)} /> */}\n        <Tab label=\"Tid Bytes\" {...a11yProps(2)} />\n      </Tabs>\n      <TabPanel className={classes.tabs} value={value} index={0}>\n        <div className=\"flex items-start bg-ep-blue-dark text-white sm:text-sm font-bold px-4 py-3 mb-3\" role=\"alert\">\n          <span><span className=\"text-ep-yellow\">I love what I do!</span> From creating beautiful maps to meaningful data visualizations, I'm moved by the magic of technical programming, cool drone footage and creative graphics design.</span>\n        </div>\n        <PortfolioData type={'projects'}/>\n      </TabPanel>\n      <TabPanel className={classes.tabs} value={value} index={1}>\n        <PortfolioData type={'skills'}/>\n        <br />\n        <PortfolioData type={'work'}/>\n      </TabPanel>\n      <TabPanel className={classes.tabs} value={value} index={2}>\n        <div className=\"flex items-start bg-ep-blue-dark text-white sm:text-sm font-bold px-4 py-3 mb-3\" role=\"alert\">\n          <span>In case you're interested: here is <em className=\"text-ep-yellow\">some</em> of my most favorite, <span className=\"text-ep-yellow\">inspiring content</span> on the web.</span>\n        </div>\n        <PortfolioData type={'extras'}/>\n      </TabPanel>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport 'fontsource-montserrat';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <div className=\"flex justify-between align-middle items-center\">\n        <h6 className=\"text-lg inline-flex\">{children}</h6>\n        {onClose ? (\n          <button className=\"hover:bg-gray-400 font-bold text-ep-blue-dark py-2 px-2 inline-flex items-center rounded-full\" aria-label=\"close\" onClick={onClose}>\n            <CloseIcon />\n          </button>\n        ) : null}\n      </div>\n      \n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <button className=\"bg-gray-300 hover:bg-gray-400 font-bold text-ep-blue-dark py-2 px-2 rounded-full inline-flex items-center animate-pulse\" onClick={handleClickOpen}>\n        <InfoIcon />\n      </button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          What's in here?\n        </DialogTitle>\n        <DialogContent dividers>\n          <div className=\"text-sm mb-3\">\n            The <span className=\"font-extrabold text-ep-blue-dark\">map-centric applications</span> in this portfolio showcase some of my work—projects in which I've taken the Lead Developer role (writing &gt;&#61; 90% code).\n          </div>\n          <div className=\"text-sm mb-3\">\n            While <span className=\"font-extrabold text-ep-blue-dark\">each project applies its own layout, content &amp; and features</span>, most applications are:\n            <ul className=\"list-disc pl-4\">\n                <li>mobile-ready &amp; device agnostic</li>\n                <li>built using tools like Esri's REST/JavaScript APIs</li>\n                <li>written with responsive libraries (i.e. Materialize &amp; Bootstrap)</li>\n                <li>supported by server-side PHP &amp; Python scripting to process data in <span className=\"font-extrabold text-ep-blue-dark\">MS SQL &amp; MySQL</span> databases, as well as <span className=\"font-extrabold text-ep-blue-dark\">REST &amp; SOAP web services</span></li>\n            </ul>\n          </div>\n          <div className=\"text-sm my-3\">\n            Lastly, in efforts to pursue new skills and learn new tooling, this portfolio is written using the <span className=\"font-extrabold text-ep-blue-dark\">React</span> framework. Enjoy!\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 inline-flex items-center rounded-md\" onClick={handleClose}>\n            Close\n          </button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { /* Link,  */scroller } from \"react-scroll\";\nimport \"fontsource-montserrat\"; \nimport logo from './logo.svg';\nimport cover from './ep.JPG';\nimport './App.css';\nimport Header from './components/Header';\nimport TabbedContent from './components/TabbedContent';\nimport PortfolioInfo from './components/PortfolioInfo';\n\n\nfunction App() {\n  \n  function handleScroll() {\n    //animateScroll.scrollTo(500);\n    scroller.scrollTo(\"scrollDiv\", {\n      duration: 500,\n      smooth: \"easeInExpo\",\n      offset: -80\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <div className=\"app-content flex flex-wrap items-center\">\n          <div className=\"w-full sm:w-1/2\">\n            {<img src={cover} className=\"bg-white rounded-full object-contain h-100\" alt=\"ep-cover\" />}\n          </div>\n          <div className=\"w-full sm:w-1/2 app-contours py-20\">\n              <div className=\"text-center\">\n                <h1 className=\"font-semibold text-4xl text-ep-blue-dark\">MapMazeLu</h1>\n                <div className=\"text-sm\">\n                  <div className=\"hidden md:block lg:block\">\n                    <code>GIS Professional &bull; Full-Stack Developer &bull; Map Enthusiast</code>\n                  </div>\n                  <div className=\"block md:hidden lg:hidden\">\n                    <p><code>GIS Professional</code></p>\n                    <p><code>Full-Stack Developer</code></p>\n                    <p><code>Map Enthusiast</code></p>\n                  </div>\n                </div>\n                <div>\n                    {<img src={logo} className=\"object-contain h-48 w-full\" alt=\"logo\" />}\n                </div>\n                <div className=\"mb-2\">\n                  <span className=\"block uppercase tracking-widest\">Bienvenidos</span>\n                  &amp; thanks for visiting!\n                </div>\n                <PortfolioInfo />\n                {/* Please, <Link\n                  className=\"cursor-pointer underline\"\n                  to=\"#\"\n                  onClick={handleScroll}>\n                    have a look\n                </Link>\n                &nbsp;around... */}\n                Please,&nbsp;\n                <span className=\"cursor-pointer underline\" href=\"#\" onClick={handleScroll}>\n                  have a look\n                </span>\n                &nbsp;around...\n              </div>\n            </div>\n        </div>\n      <div className=\"items-center\" id=\"scrollDiv\">\n        <TabbedContent />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport './assets/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.6e251a6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/ep.6016a94f.JPG\";"],"sourceRoot":""}